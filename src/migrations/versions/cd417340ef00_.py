"""empty message

Revision ID: cd417340ef00
Revises: 
Create Date: 2020-12-19 20:00:59.991174

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'cd417340ef00'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('celery_taskmeta',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('task_id', sa.String(length=155), nullable=True),
                    sa.Column('status', sa.String(length=50), nullable=True),
                    sa.Column('result', sa.PickleType(), nullable=True),
                    sa.Column('date_done', sa.DateTime(), nullable=True),
                    sa.Column('traceback', sa.Text(), nullable=True),
                    sa.Column('name', sa.String(length=155), nullable=True),
                    sa.Column('args', sa.LargeBinary(), nullable=True),
                    sa.Column('kwargs', sa.LargeBinary(), nullable=True),
                    sa.Column('worker', sa.String(length=155), nullable=True),
                    sa.Column('retries', sa.Integer(), nullable=True),
                    sa.Column('queue', sa.String(length=155), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('task_id'),
                    sqlite_autoincrement=True
                    )
    op.create_table('celery_tasksetmeta',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('taskset_id', sa.String(length=155), nullable=True),
                    sa.Column('result', sa.PickleType(), nullable=True),
                    sa.Column('date_done', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('taskset_id'),
                    sqlite_autoincrement=True
                    )
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(length=60), nullable=False),
                    sa.Column('email', sa.String(length=120), nullable=False),
                    sa.Column('first_name', sa.String(length=32), nullable=True),
                    sa.Column('last_name', sa.String(length=32), nullable=True),
                    sa.Column('created_date', sa.DateTime(), nullable=True),
                    sa.Column('password_hash', sa.String(length=128), nullable=True),
                    sa.Column('active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('hosts',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=128), nullable=False),
                    sa.Column('hostname', sa.String(length=253), nullable=False),
                    sa.Column('port', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(length=32), nullable=True),
                    sa.Column('ssh_options', sa.Text(), nullable=True),
                    sa.Column('authentication_method', sa.Enum('password', 'key_pair', name='authenticationmethod'),
                              nullable=True),
                    sa.Column('password', sa.String(length=128), nullable=True),
                    sa.Column('private_key', sa.Text(), nullable=True),
                    sa.Column('encrypt_authentication', sa.Boolean(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id', 'name', name='hosts_user_id_name_unique')
                    )
    op.create_index(op.f('ix_hosts_hostname'), 'hosts', ['hostname'], unique=False)
    op.create_index(op.f('ix_hosts_name'), 'hosts', ['name'], unique=False)
    op.create_table('roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('host_commands',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('command', sa.Text(), nullable=False),
                    sa.Column('status', sa.Boolean(), nullable=False),
                    sa.Column('latest_result', sa.Text(), nullable=True),
                    sa.Column('last_completed_at', sa.DateTime(), nullable=True),
                    sa.Column('host_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['host_id'], ['hosts.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('host_id', 'command', name='host_id_command_unique')
                    )
    op.create_index(op.f('ix_host_commands_command'), 'host_commands', ['command'], unique=False)
    op.create_table('host_commands_events',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('result', sa.Text(), nullable=False),
                    sa.Column('exit_code', sa.Integer(), nullable=False),
                    sa.Column('completed_at', sa.DateTime(), nullable=False),
                    sa.Column('host_command_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['host_command_id'], ['host_commands.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###
    op.execute("""
CREATE FUNCTION update_command_event() RETURNS trigger AS
$update_command_event$
BEGIN
    update host_commands
    set last_completed_at = new.completed_at,
        latest_result     = new.result
    where id = new.host_command_id;
    RETURN NEW;
END;
$update_command_event$ LANGUAGE plpgsql;
CREATE TRIGGER update_host_command_with_event_detail
    AFTER INSERT
    ON host_commands_events
    for each row
execute procedure update_command_event();
    """)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('host_commands_events')
    op.drop_index(op.f('ix_host_commands_command'), table_name='host_commands')
    op.drop_table('host_commands')
    op.drop_table('roles')
    op.drop_index(op.f('ix_hosts_name'), table_name='hosts')
    op.drop_index(op.f('ix_hosts_hostname'), table_name='hosts')
    op.drop_table('hosts')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('celery_tasksetmeta')
    op.drop_table('celery_taskmeta')
    # ### end Alembic commands ###
    op.execute("""
drop trigger update_host_command_with_event_detail;
drop function update_command_event;
    """)
